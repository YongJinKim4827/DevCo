<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="chatMapper">
    <resultMap id="chatRoomResultMap" type="com.cyberi.devcommunity.dto.ChatRoomItem">
        <result property="chattingRoomNo"           column="CHATTINGROOM_NO"        />
        <result property="createRoomDate"           column="CREATE_ROOM_DATE"       />
        <result property="recentMessage"            column="RECENT_MESSAGE"         />
    </resultMap>

    <resultMap id="userChatResultMap" type="com.cyberi.devcommunity.dto.UserChatItem">
        <result property="chattingRoomNo"           column="CHATTINGROOM_NO"        />
        <result property="userId"                   column="USER_ID"                />
    </resultMap>

    <resultMap id="chattingMessageMap" type="com.cyberi.devcommunity.dto.ChatMessageItem">
        <result property="userId"                   column="USER_ID"                />
        <result property="chattingRoomNo"           column="CHATTINGROOM_NO"        />
        <result property="chatContent"              column="CHAT_CONTENT"           />
        <result property="chatContentNo"            column="CHAT_CONTENT_NO"        />
        <result property="readed"                   column="READED"                 />
        <result property="chattingDate"             column="CHATTING_DATE"          />
        <result property="receiveUser"             column="RECEIVE_USER"            />
        <result property="chatCount"             column="CHAT_COUNT"                />
        <result property="useChat"             column="USE_CHAT"                    />
    </resultMap>

    <!-- Chat Room -->
    <select id="selectChatRoom" resultMap="chattingMessageMap">
        SELECT
                C.USER_ID AS USER_ID, C.CHATTINGROOM_NO AS CHATTINGROOM_NO, D.CHAT_CONTENT AS CHAT_CONTENT, 
                D.CHATTING_DATE AS CHATTING_DATE, D.CHAT_COUNT AS CHAT_COUNT
            FROM
            (SELECT A.USER_ID AS USER_ID, A.CHATTINGROOM_NO AS CHATTINGROOM_NO
              FROM
                USER_CHATTINGROOM_INFO A, USER_INFO U
              WHERE
                A.CHATTINGROOM_NO IN (
                  SELECT
                    UC.CHATTINGROOM_NO AS CHATTINGROOM_NO
                  FROM
                    USER_CHATTINGROOM_INFO UC, CHATTINGROOM_INFO CR
                  WHERE UC.CHATTINGROOM_NO = CR.CHATTINGROOM_NO
                  AND UC.USER_ID = #{userId}
                  )
              AND A.USER_ID != #{userId}
              AND A.USER_ID = U.USER_ID
              AND U.USE_CHAT = 'Y'
              ORDER BY A.CHATTINGROOM_NO
              ) C,
              (
                SELECT
                    B.CHATTINGROOM_NO AS CHATTINGROOM_NO, B.CHAT_CONTENT AS CHAT_CONTENT, B.CHATTING_DATE,
                    (
                             SELECT COUNT(CHAT_CONTENT) FROM CHATTING_INFO
                              WHERE RECEIVE_USER = #{userId}
                              AND READED = 'N'
                              AND CHATTINGROOM_NO = B.CHATTINGROOM_NO
                    ) AS CHAT_COUNT
                FROM(
                        SELECT CHATTINGROOM_NO, MAX(CHATTING_DATE) AS CHATTING_DATE
                        FROM CHATTING_INFO
                        GROUP BY CHATTINGROOM_NO) A,
                            CHATTING_INFO B
                        WHERE A.CHATTINGROOM_NO = B.CHATTINGROOM_NO
                        AND B.CHATTING_DATE = A.CHATTING_DATE
            ) D
            WHERE C.CHATTINGROOM_NO = D.CHATTINGROOM_NO
    </select>

    <select id="selectNonReadedMessage" resultMap="chattingMessageMap">
        SELECT CHAT_CONTENT FROM CHATTING_INFO
        WHERE RECEIVE_USER = #{userId}
        AND READED = 'N'
    </select>
    <insert id="createChatRoom">
        INSERT INTO CHATTINGROOM_INFO
          (
            CHATTINGROOM_NO,
            CREATE_ROOM_DATE
          )VALUES (
            #{chattingRoomNo},
            SYSDATE
          )
    </insert>

    <insert id="insertUserChattingRoom">
        INSERT INTO USER_CHATTINGROOM_INFO
        (
          USER_ID,
          CHATTINGROOM_NO
        ) VALUES (
          #{userId},
          #{chattingRoomNo}
        )
    </insert>

    <delete id="deleteChatRoom">
        DELETE FROM CHATTINGROOM_INFO
        WHERE CHATTINGROOM_NO = #{chattingRoomNo}
    </delete>

    <!-- Chatting -->
    <select id="selectChatMessageInChatRoom" resultMap="chattingMessageMap">
        SELECT USER_ID, CHATTINGROOM_NO, CHAT_CONTENT, CHATTING_DATE, READED
        FROM CHATTING_INFO
        WHERE
          CHATTINGROOM_NO = #{chattingRoomNo}
        ORDER BY CHATTING_DATE ASC
    </select>

    <insert id="inputChatMessage">
        INSERT INTO CHATTING_INFO
        (
          USER_ID, CHATTINGROOM_NO, CHAT_CONTENT, CHATTING_DATE, READED, RECEIVE_USER
        ) VALUES (
          #{userId}, #{chattingRoomNo}, #{chatContent}, SYSDATE, 'N', #{receiveUser}
        )
    </insert>

    <update id="readedChatting">
        UPDATE CHATTING_INFO SET
        READED = 'Y'
        WHERE CHATTINGROOM_NO = #{chattingRoomNo}
        AND RECEIVE_USER = #{userId}
    </update>

    <delete id="deleteChatMessage">
        DELETE FROM CHATTING_INFO
        WHERE USER_ID = #{userId}
        AND CHAT_CONTENT = #{chatContent}
        <if test="">
            CHATTINGROOM_NO = #{chattingRoomNo}
        </if>
    </delete>
</mapper>
